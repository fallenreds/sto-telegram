import asyncio
import json

from aiogram import types


from api import delete_order, update_branch_remember_count, get_order_by_id, get_client_by_id, ttn_tracking, check_auth, \
    get_orders_by_tg_id, get_all_goods
from buttons import get_check_ttn_button, get_our_contact_button, get_show_discount_info_button, get_status_button
from engine import send_messages_to_admins, send_error_log, make_order


async def check_status_notification(bot, telegram_id, order):
    try:
        goods = await get_all_goods()
        goods = goods['data']
        data = json.loads(order["goods_list"].replace("'", '"'))
        client = await get_client_by_id(order['client_id'])

        await make_order(bot, telegram_id, data, goods, order, client)
    except TypeError as error:
        await send_error_log(bot, 516842877, error)

async def new_order_notification(bot, order, admin_list):
    await send_messages_to_admins(bot, admin_list, "–ù–æ–≤–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤ remonline —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ!")


async def ttn_update_notification(bot, order):
    message_text = f"<b>–î—è–∫—É—î–º–æ! –í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—èüì¶ ‚Ññ{order['id']} –≤—ñ–¥–ø—Ä–∞–≤–ª–µ–Ω–æüöõ.</b>" \
                   f"\n\n–í–∞—à –¢–¢–ù {order['ttn']}. " \
                   f"–í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –ø–æ—Å–∏–ª–∫–∏ –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µüëá"

    markup_i = types.InlineKeyboardMarkup()
    markup_i.add(get_check_ttn_button(order['ttn']))
    await bot.send_message(order['telegram_id'], message_text, reply_markup=markup_i)


async def order_in_branch_reminder_notifications(bot, order, remember_time):
    try:
        await asyncio.sleep(remember_time)
        nova_post = await ttn_tracking(order['ttn'], order['phone'])
        if not nova_post['success']:
            return None
        if int(nova_post['data'][0]['StatusCode']) == 7:
            await order_in_branch_notifications(bot, order)


    except Exception as error:
        await send_error_log(bot, 516842877, error)


async def new_order_client_notification(bot, order):
    try:
        # markup_i = types.InlineKeyboardMarkup().add(get_status_button())
        # await bot.send_message(order['telegram_id'],
        #                        "<b>–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç–µ, –≤—ñ—Ç–∞—î–º–æ, –≤–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è —É—Å–ø—ñ—à–Ω–æ —Å—Ç–≤–æ—Ä–µ–Ω–æ üéâü•≥</b>"
        #                        "\n\n–í–∏ –º–æ–∂–µ—Ç–µ –ø–µ—Ä–µ–≥–ª—è–Ω—É—Ç–∏ —Å—Ç–∞—Ç—É—Å –≤–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è –Ω–∞—Ç–∏—Å–Ω—É–≤—à–∏ –∫–Ω–æ–ø–∫—É –Ω–∏–∂—á–µ, –∞–±–æ –Ω–∞—Ç–∏—Å–Ω—É—Ç–∏ –Ω–∞ —Å—Ç–∞—Ç—É—Å –æ–≥–æ–ª–æ—à–µ–Ω–Ω—è —É –º–µ–Ω—é –Ω–∏–∂—á–µ",
        #                        reply_markup=markup_i)
        # message = types.Message({"chat": {"id":}})
        await check_status_notification(bot, order['telegram_id'], order)
    except Exception as error:
        await send_error_log(bot, 516842877, error)


async def no_connection_with_server_notification(bot, message):
    await bot.send_message(message.chat.id,
                           "–ü—Ä–∏–Ω–æ—Å–∏–º–æ –≤–∏–±–∞—á–µ–Ω–Ω—è, –Ω–∞ –¥–∞–Ω–Ω–∏–π –º–æ–º–µ–Ω—Ç —Å–µ—Ä–≤—ñ—Å –Ω–µ –º–æ–∂–µ –∑'—ó–¥–Ω–∞—Ç–∏—Å—è –∑ —Å–µ—Ä–≤–µ—Ä–æ–º")


async def order_in_branch_notifications(bot, order):
    try:
        message_text = f"–í–∞—à–µ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{order['id']} –≤—ñ–¥ <b>Airbag ‚ÄúAutodelivery‚Äù</b> –ø—Ä–∏–±—É–ª–æ —É –≤—ñ–¥–¥—ñ–ª–µ–Ω–Ω—è."
        markup_i = types.InlineKeyboardMarkup()
        markup_i.add(get_check_ttn_button(order['ttn']))
        await update_branch_remember_count(order['id'])
        await bot.send_message(order['telegram_id'], message_text, reply_markup=markup_i)
    except Exception as error:
        await send_error_log(bot, 516842877, error)


async def deactivated_notifications(bot, order, admin_list):
    try:
        client_text = f"–î—è–∫—É—î–º–æ –∑–∞ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è <b>‚Ññ{order['id']}</b>!\n–î–æ –Ω–æ–≤–∏—Ö –∑—É—Å—Ç—Ä—ñ—á–µ–π —É AirBag ‚ÄúAutoDelivery‚Äù üíõüíô"
        admin_text = f"–í—ñ—Ç–∞—é, –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{order['id']} —É—Å–ø—ñ—à–Ω–æ –∑–∞–≤–µ—Ä—à–µ–Ωo."
        await bot.send_message(order['telegram_id'], client_text)
        await send_messages_to_admins(bot, admin_list, admin_text)
    except Exception as error:
        await send_error_log(bot, 516842877, error)


async def deleted_notifications(bot, order, admin_list):
    try:
        client_text = f"<b>–ù–∞ –∂–∞–ª—å, –º–∏ –Ω–µ –¥–æ—á–µ–∫–∞–ª–∏—Å—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –í–∞—à–æ–≥–æ –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{order['id']} üòü</b>" \
                      f"\n–ó–∞–º–æ–≤–ª–µ–Ω–Ω—è –≤–∏–¥–∞–ª–µ–Ω–æ, —á–µ–∫–∞—î–º–æ –Ω–∞ –í–∞—à–µ –ø–æ–≤–µ—Ä–Ω–µ–Ω–Ω—è! üòÄ"
        admin_text = f"–®–∞–Ω–æ–≤–Ω–∏–π –∞–¥–º—ñ–Ω—ñ—Å—Ç—Ä–∞—Ç–æ–≤, –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{order['id']} —É—Å–ø—ñ—à–Ω–æ –≤–∏–¥–∞–ª–µ–Ω–æ."
        markup_i = types.InlineKeyboardMarkup().add(get_our_contact_button())
        await bot.send_message(order['telegram_id'], client_text, reply_markup=markup_i)
        await send_messages_to_admins(bot, admin_list, admin_text)
        await delete_order(order["id"])
    except Exception as error:
        await send_error_log(bot, 516842877, error)


async def client_added_bonus_notifications(bot, client_id):
    # try:
    client_text = "–®–∞–Ω–æ–≤–Ω–∏–π –∫–ª—ñ—î–Ω—Ç, –≤—ñ—Ç–∞—î–º–æ, –≤–∞–º –Ω–∞—Ä–∞—Ö–æ–≤–∞–Ω–∞ –Ω–æ–≤–∞ –∑–Ω–∏–∂–∫–∞üéâ\n" \
                  "–î–ª—è —Ç–æ–≥–æ, —â–æ–± –ø—Ä–µ–≥–ª—è–Ω—É—Ç–∏ –±—ñ–ª—å—à –¥–µ—Ç–∞–ª—å–Ω—É —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—é –Ω–∞—Ç–∏—Å–Ω—ñ—Ç—å –Ω–∞ <b>–ó–Ω–∏–∂–∫–∏üíé</b>"
    client = await get_client_by_id(client_id)
    markup_i = types.InlineKeyboardMarkup().add(get_show_discount_info_button())
    await bot.send_message(client['telegram_id'], client_text, reply_markup=markup_i)
    # except Exception as error:
    #     await send_error_log(bot, 516842877, error)


async def unknown_error_notifications(bot, telegram_id):
    await bot.send_message(telegram_id, text="–£–ø—Å. –í—ñ–¥–±—É–ª–∞—Å—å –Ω–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞. –°–ø—Ä–æ–±—É–π—Ç–µ —Ç—Ä—ñ—à–∫–∏ –ø—ñ–∑–Ω—ñ—à–µ")


async def change_to_not_prepayment_notifications(bot, order_id, telegram_id):
    await bot.send_message(telegram_id, text=f"–¢–∏–ø –∑–∞–º–æ–≤–ª–µ–Ω–Ω—è ‚Ññ{order_id} –∑–º—ñ–Ω–µ–Ω–æ –Ω–∞ –Ω–∞–∫–ª–∞–¥–µ–Ω–∏–π –ø–ª–∞—Ç—ñ–∂")
